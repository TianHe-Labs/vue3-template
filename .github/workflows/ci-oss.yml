# This is a basic workflow to help you get started with Actions

name: Build and Deploy to Aliyun OSS

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches:
  pull_request:
    branches:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v3

      # Install Node.js
      - name: Install Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          # cache: 'npm' # use pnpm instead of npm

      # Install pnpm
      - name: Install pnpm
        uses: pnpm/action-setup@v2.2.1
        id: pnpm-install
        with:
          version: 7
          run_install: false

      # Cache
      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

      # Cache
      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      # Install dependencies with pnpm
      - name: Install dependencies
        run: pnpm install

      # Build with pnpm
      - name: Build vue3.x app
        run: pnpm run build

      # Deploy to ali-oss
      - name: Deploy to ali-oss
        uses: Menci/upload-to-oss@beta-v3
        with:
          # Use Access Key
          access-key-id: ${{ secrets.OSS_ACCESS_KEY_ID }}
          access-key-secret: ${{ secrets.OSS_ACCESS_KEY_SECRET }}
          # Or use STS Token
          # security-token: ${{ secrets.ALIYUN_SECURITY_TOKEN }}

          bucket: tianhe-apps # FIXME: set your own bucket name
          endpoint: oss-cn-qingdao.aliyuncs.com # FIXME: set your own endpoint name

          # Upload the built website files in "dist" directory to remote "my-website/" prefix
          local-path: dist # FIXME: set your local build path
          remote-path: vue-template # FIXME: set your expected remote path

          # Include HTML files only
          #include-regex: \.html$
          # Exclude some files
          #excluce-regex: dont-upload-this\.html$

          # Set some headers (JS function or just in JSON)
          headers: |
            filename => (
              {
                "Cache-Control": `public, max-age=${filename.endsWith(".html") ? 60 : 604800}`
              }
            )

          # Upload ALL other files before uploading HTML files
          delay-html-file-upload: true

          # Prevent deleting missing remote files compared to local (defaults to `false`)
          no-delete-remote-files: true

          # Retry 5 times on failure of each OSS operation
          retry: 5

          # Use increment or not
          increment: true
